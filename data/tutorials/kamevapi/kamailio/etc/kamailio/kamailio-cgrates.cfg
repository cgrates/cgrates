# Kamailio-CGRateS related route blocks

# Called on new connection over evapi, should normally be the case of CGRateS engine
event_route[evapi:connection-new] {
    $sht(cgrconn=>cgr) = $evapi(srcaddr) + ":" + $evapi(srcport); # Detect presence of at least one connection
}

# Called when the connection with CGRateS closes
event_route[evapi:connection-closed] {
	$var(connClosed) = $evapi(srcaddr) + ":" + $evapi(srcport);
	if $sht(cgrconn=>cgr) == $var(connClosed) {
		$sht(cgrconn=>cgr) = $null;
	}
}

# Message received from CGRateS, dispatch it to own route
event_route[evapi:message-received] {
	json_get_field("$evapi(msg)", "Event", "$var(Event)");
	route($(var(Event){s.rm,"})); # String characters are kept by json_get_field, remove them here
}

# Called by Kamailio on new dialog
event_route[dialog:start] {
	route(CGR_CALL_START);
}

# Called by Kamailio on dialog end
event_route[dialog:end] {
	route(CGR_CALL_END);
}

# Called by Kamailio on local disconnect
event_route[tm:local-request] {
	route(CGR_CALL_END);
}

# CGRateS request for session disconnect
route[CGR_SESSION_DISCONNECT] {
        json_get_field("$evapi(msg)", "HashEntry", "$var(HashEntry)");
        json_get_field("$evapi(msg)", "HashId", "$var(HashId)");
        json_get_field("$evapi(msg)", "Reason", "$var(Reason)");
        jsonrpc_exec('{"jsonrpc":"2.0","id":1, "method":"dlg.end_dlg","params":[$(var(HashEntry){s.rm,"}),$(var(HashId){s.rm,"})]}');
        #$jsonrpl($var(reply));
}


# Send AUTH_REQUEST to CGRateS
route[CGRATES_AUTH_REQUEST] {
	# Auth INVITEs with CGRateS
	if $sht(cgrconn=>cgr) == $null {
		sl_send_reply("503","Charging controller unreachable");
		exit;
	}
	evapi_async_relay("{\"event\":\"CGR_AUTH_REQUEST\",
		\"tr_index\":\"$T(id_index)\",
		\"tr_label\":\"$T(id_label)\",
		\"cgr_subsystems\":\"*attributes;*resources;*accounts;*suppliers\",
		\"RequestType\":\"$dlg_var(cgrReqType)\",
		\"Tenant\":\"$dlg_var(cgrTenant)\",
		\"Account\":\"$dlg_var(cgrAccount)\",
		\"Destination\":\"$dlg_var(cgrDestination)\",
		\"SetupTime\":\"$TS\"}");
}

# Process AUTH_REPLY from CGRateS
route[CGR_AUTH_REPLY] {
	json_get_field("$evapi(msg)", "TransactionIndex", "$var(TransactionIndex)");
	$var(TransactionIndex) = $(var(TransactionIndex){s.rm,"});
	$var(id_index) = $(var(TransactionIndex){s.int});

	json_get_field("$evapi(msg)", "TransactionLabel", "$var(TransactionLabel)");
	$var(TransactionLabel) = $(var(TransactionLabel){s.rm,"});
	$var(id_label) = $(var(TransactionLabel){s.int});

	json_get_field("$evapi(msg)", "Attributes", "$var(cgrAttributes)");
	$var(cgrAttributes) = $(var(cgrAttributes){s.rm,"});
	
	json_get_field("$evapi(msg)", "ResourceAllocation", "$var(cgrResourceAllocation)");
	$var($var(cgrResourceAllocation)) = $(var(cgrResourceAllocation){s.rm,"});

	json_get_field("$evapi(msg)", "MaxUsage", "$var(MaxUsage)");
	$var(cgrMaxUsage) = $(var(MaxUsage){s.int});

	json_get_field("$evapi(msg)", "Suppliers", "$var(cgrSuppliers)");
	$var($var(cgrSuppliers)) = $(var(cgrSuppliers){s.rm,"});

	json_get_field("$evapi(msg)", "Error", "$var(cgrError)");
	$var(cgrError) = $(var(cgrError){s.rm,"});

	t_continue("$var(id_index)", "$var(id_label)", "CGRATES_AUTH_REPLY"); # Unpark the transaction 
}

# Inform CGRateS about CALL_START (start prepaid sessions loops)
route[CGR_CALL_START] {
	if $sht(cgrconn=>cgr) == $null {
		xlog("Charging controller unreachable");
		exit;
	}
	$var(cgrOriginID) = $dlg(callid)+";"+$dlg(from_tag);
	 evapi_relay("{\"event\":\"CGR_CALL_START\",
		\"h_entry\":\"$dlg(h_entry)\",
		\"h_id\":\"$dlg(h_id)\",
		\"cgr_subsystems\":\"*resources;*accounts\",
		\"OriginID\":\"$dlg_var(cgrOriginID)\",
		\"RequestType\":\"$dlg_var(cgrReqType)\",
		\"Tenant\":\"$dlg_var(cgrTenant)\",
		\"Account\":\"$dlg_var(cgrAccount)\",
		\"Destination\":\"$dlg_var(cgrDestination)\",
		\"AnswerTime\":\"$TS\"}");
}



# Inform CGRateS about CALL_END (stop debit loops, perform accounting if desired in this way)
route[CGR_CALL_END] {
	if $sht(cgrconn=>cgr) == $null {
		xlog("Charging controller unreachable");
		exit;
	}
	$var(callDur) = $TS - $dlg(start_ts);
	 evapi_relay("{\"event\":\"CGR_CALL_END\",
		\"cgr_subsystems\":\"*resources;*accounts\",
		\"OriginID\":\"$dlg_var(cgrOriginID)\",
		\"RequestType\":\"$dlg_var(cgrReqType)\",
		\"Tenant\":\"$dlg_var(cgrTenant)\",
		\"Account\":\"$dlg_var(cgrAccount)\", 
		\"Destination\":\"$dlg_var(cgrDestination)\",
		\"AnswerTime\":\"$dlg(start_ts)\",
		\"Usage\":\"$var(callDur)\"}");
}